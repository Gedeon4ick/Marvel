{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","hooks/http.hook.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/spinner/Spinner.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/pages/404.js","components/pages/SinglComicPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","end","style","color","isActive","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","ErrorMessage","src","img","alt","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ComicsList","comicslist","setComicslist","newItemLoading","setnewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","lenght","arr","item","i","renderItems","errorMessage","spinner","disabled","onClick","AppBanner","avengers","avengersLogo","ComicsPage","View","imgStyle","href","RandomChar","setChar","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","catch","err","console","log","content","mjolnir","CharList","onCharSelected","selectedChar","charList","setCharList","setNewItemLoading","charEnded","setCharEnded","result","onCharListLoaded","newCharList","length","spiner","element","tabIndex","onFocus","Skeleton","CharInfo","props","charId","onChatLoaded","skeleton","ErrorBoundary","state","errorInfo","this","setState","children","Component","MainPage","decoration","Page404","comic","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","App","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d8d11e53.chunk.js","sourcesContent":["import {Link, NavLink} from 'react-router-dom';\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink\n                        end\n                        style={({ isActive}) => ({color: isActive ? '#9f0013' : 'inherit'})}\n                        to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink\n                        \n                        style={({ isActive}) => ({color: isActive ? '#9f0013' : 'inherit'})}\n                        to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import {useHttp} from \"../hooks/http.hook\"\r\n// файлы для взаимодействия с сервером\r\n\r\n\r\n// создаем класс, здесь мы не импорттируем компонент и не наследуем ничего, так как класс будет на чистом Js. \r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase =  'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey ='apikey=158c7e484bbe3f594246c0ba7c72b090';\r\n    const _baseOffset = 210;\r\n\r\n    \r\n     // функция для отправки get запросов\r\n    \r\n    // методы которые будут делать запросы\r\n    const getAllCharacters =  async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n    // получение только одного персонажа\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    } \r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n    // метод трансформации данных в нужный нам формат\r\n    const _transformCharacter = (char) => {\r\n          return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[0].url,\r\n            comics: char.comics.items\r\n          }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic}\r\n}\r\n\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = \"GET\", body = null, headers = {\"Content-Type\": \"application/json\"}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            \r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nimport './erorr.scss'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div>\r\n            <img className=\"imgError\" src={img} alt=\"Error\"/>     \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;\r\n\r\n","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#71D9FA\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#71D9FA\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#71D9FA\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#71D9FA\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#71D9FA\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#71D9FA\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#71D9FA\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#71D9FA\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","import './comicsList.scss';\nimport { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport { Link } from 'react-router-dom';\n\nconst ComicsList = () => {\n    const [comicslist, setComicslist] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true)\n    },[]);\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.lenght < 8) {\n            ended = true;\n        }\n        setComicslist([...comicslist, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                 </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems (comicslist)\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                disabled={newItemLoading}\n                style={{'display' : comicsEnded ? \"none\" : \"block\"}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nconst RandomChar = () => {\r\n\r\n    const [char, setChar] = useState(null);\r\n\r\n    const {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n        const timerId = setInterval(updateChar, 60000);\r\n\r\n        return () => {\r\n            clearInterval(timerId)\r\n        }\r\n    }, [])\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = () => {\r\n        clearError();\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\r\n        getCharacter(id)\r\n            .then(onCharLoaded)\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\r\n\r\n    return (\r\n        <div className=\"randomchar\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br/>\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button onClick={updateChar} className=\"button button__main\">\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki} = char;\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import './charList.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nconst CharList = ({onCharSelected, selectedChar}) => {\r\n    const [charList, setCharList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n\r\n    const {loading, error, getAllCharacters}= useMarvelService();\r\n\r\n    useEffect(()=> {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n\r\n    const onRequest = (offset, initial) => {\r\n        // if (initial) {\r\n        //     getAllCharacters(offset)\r\n        //     .then(onCharListLoaded)\r\n        // }\r\n        initial ? setNewItemLoading(false) :\r\n        setNewItemLoading(true);\r\n        getAllCharacters(offset)\r\n        .then(result => onCharListLoaded(result))\r\n    } \r\n\r\n\r\n    const onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if(newCharList.length < 9) {\r\n            ended = true;\r\n        }\r\n\r\n        setCharList(charList => [...charList, ...newCharList]);\r\n        setNewItemLoading(newItemLoading => false);\r\n        setOffset(offset => offset + 9);\r\n        setCharEnded(charEnded => ended);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spiner = loading && !newItemLoading ? <Spinner/> : null;\r\n    const content = charList.map((element) => {\r\n        return (\r\n                <li \r\n                    tabIndex={0}\r\n                    onFocus={() => onCharSelected(element.id)}\r\n                    key={element.id}\r\n                    onClick={() => onCharSelected(element.id)}\r\n                    className={selectedChar ? selectedChar === element.id ? \"char__item active\" : \"char__item\" : \"char__item\"}>\r\n                        <img src={element.thumbnail} alt=\"abyss\" className={element.thumbnail == null ? null : \"active\"}/>\r\n                        <div className=\"char__name\">{element.name}</div>\r\n                </li>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"char__list\">\r\n            {errorMessage}\r\n            {spiner}\r\n            <ul className=\"char__grid\">\r\n                {content}\r\n            </ul>\r\n            <button \r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                style={{\"display\": charEnded ? \"none\" : \"block \"}}\r\n                onClick={() => {onRequest(offset)}}\r\n                >\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react/cjs/react.development';\nimport PropTypes from 'prop-types';\nimport './charInfo.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nconst CharInfo = (props) =>{\n    const [char, setChar] = useState(null)\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [props.charId])\n\n\n    const updateChar = () => {\n        clearError();\n        const {charId} = props;\n        if (!charId) {\n            return;\n        } else {\n            clearError();\n            getCharacter(charId)\n            .then(onChatLoaded)\n            .catch(res => console.log(res))\n        }\n        \n    }\n\n    const onChatLoaded = (char) => {\n        setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spiner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n  \n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spiner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    return (\n    <>\n        <div className=\"char__basics\">\n            <img src={thumbnail} alt={name} className={thumbnail == null ? null : \"active\"}/>\n            <div>\n                <div className=\"char__info-name\">{name}</div>\n                <div className=\"char__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div className=\"char__descr\">\n           {description}\n        </div>\n        <div className=\"char__comics\">Comics:</div>\n        <ul className=\"char__comics-list\">\n            {comics.lenght > 0 ? null : \"There is no comics with this character\"} \n\n            {\n                comics.map((item, i) => {\n                    if (i > 10) return;\n                    return (\n                        <li key={i} className=\"char__comics-item\">\n                            {item.name}\n                        </li>\n                    )\n                })\n            }\n            \n        </ul>\n    </>\n    )\n    \n}\n\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return {error: true}\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected} selectedChar={selectedChar}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div> \r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import ErrorMessage from \"../errorMessage/ErrorMessage\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <div>\r\n            <ErrorMessage/>\r\n            <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px'}}>Page doesn't exist</p>\r\n            <Link style={{'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px', 'marginTop': '30px'}} to=\"/\">Back to main page</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import { useParams, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const {loading, error, getComic, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic()\r\n    }, [comicId])\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n    const {title, description, pageCount, thumbnail, language, price} = comic;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;","\r\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport {ComicsPage, MainPage, Page404, SingleComicPage} from \"../pages\";\r\n\r\nconst App = () => {\r\n    \r\n    return (\r\n        <HashRouter>\r\n            <div className=\"app\">\r\n                <AppHeader/>\r\n                <main>\r\n                    <Routes>\r\n                        <Route path=\"/\" element={<MainPage/>}/>\r\n                        <Route path=\"/comics\" element={<ComicsPage/>}/>\r\n                        <Route exact path=\"/comics/:comicId\" element={<SingleComicPage/>}/>\r\n                        <Route path=\"*\" element={<Page404/>}/>\r\n                    </Routes>\r\n                </main>\r\n            </div>\r\n        </HashRouter>\r\n        \r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\nReactDOM\n  .createRoot(document.getElementById('root'))\n  .render(\n      <App />\n  );\n\n\n\n"],"sourceRoot":""}